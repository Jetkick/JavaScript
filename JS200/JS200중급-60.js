
// JS 200제 표준 내장 객체 이해하기 (중급 60)

// 표준 내장 객체(Standard Built-in Objects 또는 Global Objects)는 전역 스코프(scope) 안에 있는 객체 들을 참조하고 있어,
// 자바스크립트를 실행할 때 어떤 환경(브라우저, 서버)이라도 전역에서 사용가능합니다.

// 표준 내장 객체는 객체임에도 함수처럼 호출할 수 있는 객체가 있습니다.
//매개변수를 받고, 함수 몸통(중괄호 안의 코드 다발)에 내장 함수 객체의 행위를 특징화 하는 코드들이 구현되어 있습니다.
// 이러한 형태를 내장 함수 객체(Built-in Function Object)라고 합니다.
// new 지시자를 사용하여 함수 형태로 호출하며, 생성자(Constructor)를 생성합니다.
// 또한 표준 내장 객체에서 사용할 수 있는 속성과 메소드가 정의되어 있습니다.

const str = new String('자바스크립트')
const num = new Number(200)
const bool = new Boolean(true)
const date = new Date();
const map = new Map();
const set = new Set();

const str1 = '자바스크립트 200제'; // String
const str2 = new String('자바스크립트 200제'); // Object

console.log(str1 === '자바스크립트 200제')
console.log(str2 === new String('자바스크립트 200제'));

console.log(str1.valueOf());
console.log(str2.valueOf());
// valueOf 메소드는 {객체}의 원시형 값을 반환합니다. 
// 원시 자료형인 str1(String)도 - string 내장 객체 -가 지원하는 메소드를 사용할 수 있습니다 => 표준 내장 객체에 포함된다.



// 자바스크립트 표준 내장 객체의 종류에 대해 간단히 살펴보겠습니다.
// Object : 다른 표준 내장 객체의 기본이 되는 일반 객체입니다.
// Number : 숫자형을 감싼 객체입니다. 숫자형과 관련된 함수와 속성을 갖고 있습니다.
// String : 문자형을 감싼 객체입니다. 문자형을 조작하거나 특정 문자열을 찾고 추출하는 등의 메소드와 속성을 활용할 수 있습니다.
// Array : 모든 배열은 Array.prototype을 상속받습니다. Array 객체는 리스트처럼 배열 역할을 지니며, 배열 요소를 추가,삭제하거나,
// 배열 자체를 순회/변형하는 다양한 메소드와 속성을 지니고 있습니다.

// Math : 수리 연산을 하기 위한 속성과 메소드를 지닌 내장 객체입니다. 다른 내장 객체와 달리 Math 객체는 new를 통해 인스턴스를 생성하지 않습니다.
// static으로 정의된 속성과 메소드를 직접 호출해야 합니다.

// Date : 시간에 관련된 객체입니다. 현재 시간을 비롯하여, 국제 표준시에 따른 시간 변환 계산도 할 수 있습니다.
// JSON : JavaScript Object Notation(JSON)을 의미합니다. 이를 다른 자료형으로 변환하거나 다시 JSON으로 변환하는 등의 메소드를 제공하고 있습니다.
// RegExp : 정규표현식은 특정 문자열 처리를 위해 사용하는 문자열 패턴 정의를 의미합니다. 정규표현식을 적용 가능한 문자열 탐색, 비교, 대체 등의 문자열 처리 메소드들을 지원합니다.
// Map : ES6부터 표준으로 추가된 Map 객체는 키 : 값 데이터 구조를 지닌 데이터 집합체(Collection)입니다. 키의 중복성을 허용하지 않으며 관련된 속성, 메소드들을 갖고 있습니다.
// 또한 Iterator를 통해 Map의 데이터를 순회한다는 특징이 있습니다.

// Set : ES6부터 표준으로 추가된 객체형으로, 오직 값으로 이루어진 데이터 집합체입니다. 그래서 언뜻 배열과 비슷하게 느껴질 수도 있으나 내부 속성, 메소드의 구성이 다르고,
// 또한 Iterator로 순회된다는 점, 값의 중복성을 허용하지 않는 차이점이 있습니다.